#!/bin/bash

# Configuration Variables.

NAME=$(basename $0)
IMG_LOCATION="$HOME/media"
WORKDIR="$HOME/work/kvm_deploy"
CPUCOUNT=2
MEMORY_MB=4096

if [ "$NAME" == 'rhel' ]
then
  IMG_FILE="rhel-server-7.6-x86_64-kvm.qcow2"
else
  echo "Unable to determine IMG_FILE."
  exit 1
fi

# Usage

function usage {
  echo
  echo "Usage: $NAME ## purpose"
  echo "  ## is a number for vm name found in hosts file."
  echo "  purpose is a one word name to remember this appliance by."
  echo
  exit 1
}
if [ -z "$1" ]
then
  usage
fi

if [ -z "$2" ]
then
  usage
fi

which tcping > /dev/null 2>&1
if [ $? -ne 0 ]
then
  echo "tcping not found, please install and try again."
  exit 1
fi

# Derived Variables.

VMNAME="$NAME$1"
IMG_PATH="$IMG_LOCATION/$IMG_FILE"
PURPOSE=$2
DEST_NAME="${VMNAME}_${PURPOSE}"
IP=$(getent hosts $VMNAME | awk '{print $1}')
if [ -r "$WORKDIR/network" ]
then
  NETWORK=$(cat $WORKDIR/network)
else
  echo "$WORKDIR/network does not exist!"
  echo "Please populate $WORKDIR/network with the key=value pair that is passed to virt-install --network"
  exit 1
fi

# Main.

export LIBGUESTFS_BACKEND=direct

if [ -z "$IP" ]
then
  echo "$VMNAME not found in DNS or /etc/hosts."
  exit 1
fi

sed -i -e "s/^IPADDR=.*/IPADDR=$IP/" $WORKDIR/ifcfg-eth0 \
&& \
sudo qemu-img create -f qcow2 /var/lib/libvirt/images/$DEST_NAME.qcow2 20G \
&& \
sudo virt-resize --expand /dev/sda1 $IMG_PATH /var/lib/libvirt/images/$DEST_NAME.qcow2 \
&& \
sudo virt-customize -a \
/var/lib/libvirt/images/$DEST_NAME.qcow2 \
--hostname $VMNAME \
--touch /.autorelabel \
--root-password password:redhat \
--run-command '/bin/yum -y remove cloud-init' \
--upload $WORKDIR/ifcfg-eth0:/etc/sysconfig/network-scripts/ifcfg-eth0 \
--edit /etc/ssh/sshd_config:s/PasswordAuthentication\ no/PasswordAuthentication\ yes/g \
--mkdir /root/.ssh \
--chmod 0700:/root/.ssh \
--upload $WORKDIR/authorized_keys:/root/.ssh/authorized_keys \
--upload $WORKDIR/.bashrc:/root/.bashrc \
--upload $WORKDIR/.inputrc:/root/.inputrc \
--upload $WORKDIR/.vimrc:/root/.vimrc \
&& \
sudo /usr/bin/virt-install \
--disk path=/var/lib/libvirt/images/$DEST_NAME.qcow2 \
--import \
--network $NETWORK \
--name ${VMNAME}_${PURPOSE} \
--cpu host \
--vcpus $CPUCOUNT \
--ram $MEMORY_MB \
--os-type=linux \
--os-variant=rhel7 \
--noautoconsole \
&& \
#(
#  # Wait for SSH port to be open.
#  ALIVE=false
#  until [ $ALIVE == "true" ]
#  do
#    sleep 10
#    tcping $VMNAME 22 > /dev/null 2>&1
#    if [ $? -eq 0 ]
#    then
#      echo "$VMNAME port 22 open."
#      ALIVE=true
#      sleep 5
#    else
#      echo "$VMNAME port 22 closed."
#    fi
#  done
#) && \
(
ssh-keygen -R $VMNAME > /dev/null 2>&1
)
